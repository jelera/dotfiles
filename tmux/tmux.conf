###############################################################################
#       /\/|  __      _                                               __
#      |/\/  / /     | |_ _ __ ___  _   ___  __       ___ ___  _ __  / _|
#           / /      | __| '_ ` _ \| | | \ \/ /      / __/ _ \| '_ \| |_
#          / /    _  | |_| | | | | | |_| |>  <   _  | (_| (_) | | | |  _|
#         /_/    (_)  \__|_| |_| |_|\__,_/_/\_\ (_)  \___\___/|_| |_|_|
#
# Last Updated: Thu 27 Nov 2014 11:46:22 PM CST
#
#   Maintainer: Jose Elera (https://github.com/jelera)
#
#      License: MIT
#               Copyright (c) 2014 Jose Elera Campana
#               Permission is hereby granted, free of charge, to any person
#               obtaining a copy of this software and associated documentation
#               files (the "Software"), to deal in the Software without
#               restriction, including without limitation the rights to use,
#               copy, modify, merge, publish, distribute, sublicense, and/or
#               sell copies of the Software, and to permit persons to whom the
#               Software is furnished to do so, subject to the following
#               conditions:
#
#               The above copyright notice and this permission notice shall be
#               included in all copies or substantial portions of the Software.
#
#               THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
#               EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
#               OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
#               NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
#               HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
#               WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
#               FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
#               OTHER DEALINGS IN THE SOFTWARE.
###############################################################################


##---------------------------------------------------------------------------//
##
## => GENERAL SETTINGS
##
##---------------------------------------------------------------------------//
# use UTF8
set -g utf8
set-window-option -g utf8 on

# make tmux display things in 256 colors
set -g default-terminal "screen-256color"

# set scrollback history to 10000 (10k)
set -g history-limit 10000

# set Ctrl-a as the default prefix key combination
# and unbind C-b to free it up
set -g prefix C-a
unbind C-b
bind C-a send-prefix

# shorten command delay
set -sg escape-time 1

# set window and pane index to 1 (0 by default)
set-option -g base-index 1
setw -g pane-base-index 1

# reload ~/.tmux.conf using PREFIX r
bind r source-file ~/.tmux.conf \; display "Reloaded!"
bind | split-window -h
bind _ split-window -v

set-window-option -g automatic-rename on

# Make the current window the first window
bind T swap-window -t 1

bind < resize-pane -L 5
bind > resize-pane -R 5
bind + resize-pane -U 5
bind - resize-pane -D 5

# explicitly disable mouse control
setw -g mode-mouse off
set -g mouse-select-pane off
set -g mouse-resize-pane off
set -g mouse-select-window off


##---------------------------------------------------------------------------//
##
## => TMUX AND VIM INTEGRATION
##
##---------------------------------------------------------------------------//
## Smart pane switching with awareness of vim splits
## NOTE: Uncomment according to your platform (Linux and OSX only)
##-------------------------------------+-------------------------------------//
## OSX ONLY                            |
##-------------------------------------+
# bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
# bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
# bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
# bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
# bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

##-------------------------------------+
## LINUX ONLY                          |
##-------------------------------------+
bind -n C-k run-shell 'tmux-vim-select-pane -U'
bind -n C-j run-shell 'tmux-vim-select-pane -D'
bind -n C-h run-shell 'tmux-vim-select-pane -L'
bind -n C-l run-shell 'tmux-vim-select-pane -R'
bind -n "C-\\" run-shell 'tmux-vim-select-pane -l'

# Bring back clear screen under tmux prefix
bind C-l send-keys 'C-l'


##---------------------------------------------------------------------------//
##
## => COPY AND PASTE (INCLUDING THE SYSTEM CLIPBOARD)
##
##---------------------------------------------------------------------------//
## NOTE: Uncomment according to your platform (Linux and OSX only)
##---------------------------------------------------------------------------//

# use vim keybindings in copy mode
set-window-option -g mode-keys vi


##-------------------------------------+
## OSX ONLY                            |
##-------------------------------------+
# # provide access to the clipboard for pbpaste, pbcopy
# set-option -g default-command "reattach-to-user-namespace -l zsh"
# bind-key -t vi-copy v begin-selection
# bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# # update default binding of 'Enter' to also use copy-pipe
# unbind -t vi-copy Enter
# bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# bind y run 'tmux save-buffer - | reattach-to-user-namespace pbcopy '
# bind C-y run 'tmux save-buffer - | reattach-to-user-namespace pbcopy '


##-------------------------------------+
## LINUX ONLY                          |
##-------------------------------------+
# copying selection vim style
# http://jasonwryan.com/blog/2011/06/07/copy-and-paste-in-tmux/
# https://github.com/myfreeweb/dotfiles/blob/master/tmux.conf

bind-key Escape copy-mode                        # enter copy mode; default [
bind-key -t vi-copy Escape cancel                # exit copy mode; or hit q
bind-key p paste-buffer                          # paste; default ]
bind-key -t vi-copy v begin-selection            # begin visual mode
bind-key -t vi-copy V select-line                # visual line
bind-key -t vi-copy y copy-selection             # yank
bind-key -t vi-copy r rectangle-toggle           # visual block toggle

# read and write and delete paste buffer ( xsel method)
# https://wiki.archlinux.org/index.php/Tmux#ICCCM_Selection_Integration
# ctrl+shift+v
bind-key C-v command-prompt -p "send to tmux:" "run-shell 'tmux set-buffer -- \"$(xsel -o -b)\"'"
bind-key C-c command-prompt -p "send to xsel:" "run-shell 'tmux show-buffer | xsel -i -b'"
bind-key + command-prompt "delete-buffer"


##---------------------------------------------------------------------------//
##
## => USER INTERFACE SETTINGS
##
##---------------------------------------------------------------------------//
# set pane colors - hilight the active pane
set-option -g pane-border-fg colour235 #base02
set-option -g pane-active-border-fg colour240 #base01

# colorize messages in the command line
set-option -g message-bg black #base02
set-option -g message-fg brightred #orange

# visual notification of activity in other windows
setw -g monitor-activity on
set -g visual-activity on

# set color for status bar
set-option -g status-bg colour235 #base02
set-option -g status-fg yellow #yellow
set-option -g status-attr dim

# set window list colors - red for active and cyan for inactive
set-window-option -g window-status-fg brightblue #base0
set-window-option -g window-status-bg colour236
set-window-option -g window-status-attr dim

set-window-option -g window-status-current-fg brightred #orange
set-window-option -g window-status-current-bg colour236
set-window-option -g window-status-current-attr bright


##---------------------------------------------------------------------------//
##
## => STATUS BAR
##
##---------------------------------------------------------------------------//
set-option -g status on                # turn the status bar on
set -g status-utf8 on                  # set utf-8 for the status bar
set -g status-interval 5               # set update frequencey (default 15 seconds)
set -g status-justify centre           # center window list for clarity
# set-option -g status-position top    # position the status bar at top of screen

# show host name and IP address on left side of status bar
set -g status-left-length 85
set -g status-left "#[fg=black]#[bg=green] #S #[bg=black]#[fg=green] #h #[fg=yellow]#(~/.bin/get_localip) | #(cat ~/.cache/ext_ipaddr)"

# show session name, window & pane number, date and time on right side of status bar
set -g status-right-length 60
set -g status-right "#[fg=pink]#[bg=black] #(~/.bin/storage_ram) #(~/.bin/battery_charge) #[fg=yellow] #(cat ~/.cache/weather_tmux) #[fg=green]| %d %b %Y #[bg=green]#[fg=black]%l:%M %p"
