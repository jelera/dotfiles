#!/bin/bash

branches() {
	git for-each-ref --sort=-committerdate refs/heads/ | head -n 10 | awk -F "\t" 'BEGIN { OFS=FS }; { print substr($1, 1, 7), substr($2, 12) }'
}

# It extracts from a bunch of compression and archiving formats
extract()
{
	if [ -f "$1" ] ; then
		case "$1" in
			*.tar.bz2) tar xjf "$1" ;;
			*.tar.gz) tar xzf "$1" ;;
			*.tar.Z) tar xzf "$1" ;;
			*.bz2) bunzip2 "$1" ;;
			*.rar) unrar x "$1" ;;
			*.gz) gunzip "$1" ;;
			*.jar) unzip "$1" ;;
			*.tar) tar xf "$1" ;;
			*.tbz2) tar xjf "$1" ;;
			*.tgz) tar xzf "$1" ;;
			*.zip) unzip "$1" ;;
			*.Z) uncompress "$1" ;;
			*) echo "'$1' cannot be extracted." ;;
		esac
	else
		echo "'$1' is not a file."
	fi
}

localnet ()
{
	/sbin/ifconfig | awk /'inet addr/ {print $2}'
	echo ""
	/sbin/ifconfig | awk /'Bcast/ {print $3}'
	echo ""
}

# Looks for the ip of this computer
myip ()
{
	# lynx -dump -hiddenlinks=ignore -nolist http://checkip.dyndns.org:8245/ | grep "Current IP Address" | cut -d":" -f2 | cut -d" " -f2
	curl icanhazip.com
}

# Shows the uptime for this terminal
#upinfo ()
#{
#echo -ne "${txtgrn}$HOSTNAME ${txtred}uptime is ${txtcyn} \t ";uptime | awk /'up/ {print $3,$4,$5,$6,$7,$8,$9,$10}'
#}


# Encrypts using GNUPG
encrypt ()
{
	gpg -ac --no-options "$1"
}

decrypt ()
{
	gpg --no-options "$1"
}

# Creates a directory and sets the PWD to it
take ()
{
	mkdir -p $1
	cd $1
}

convert_video_to_mp4 () {
	find . -name '*.mov' -print0 | xargs -0 -I xxx ffmpeg -i xxx -f mp4 -vcodec mpeg4 -qscale 0 xxx.mp4
	find . -iname '*.mov.mp4' -print0 | xargs -0 rename 's/\.mov\.mp4$/\.mp4/i'
	mkdir ./oldmovies/
	find . -iname '*.mov' -print0 | xargs -0 -I fff mv fff ./oldmovies/
}
