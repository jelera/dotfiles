#!/bin/bash

# Install Oh My Zsh with Mise Support Script
# This script installs Oh My Zsh and configures it to support mise (mise not installed)

set -e  # Exit on any error

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Function to print colored output
print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Function to check if command exists
command_exists() {
    command -v "$1" >/dev/null 2>&1
}

# Check if running as root (not recommended)
if [ "$EUID" -eq 0 ]; then
    print_warning "Running as root is not recommended. Consider running as a regular user."
    read -p "Do you want to continue? (y/N): " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        exit 1
    fi
fi

print_status "Starting Oh My Zsh installation with mise support configuration..."

# Install zsh if not present
if ! command_exists zsh; then
    print_status "Zsh not found. Installing zsh..."
    if command_exists apt-get; then
        sudo apt-get update && sudo apt-get install -y zsh
    elif command_exists yum; then
        sudo yum install -y zsh
    elif command_exists dnf; then
        sudo dnf install -y zsh
    elif command_exists pacman; then
        sudo pacman -S --noconfirm zsh
    elif command_exists brew; then
        brew install zsh
    else
        print_error "Could not install zsh. Please install it manually."
        exit 1
    fi
    print_success "Zsh installed successfully!"
else
    print_success "Zsh is already installed."
fi

# Install Oh My Zsh if not present
if [ ! -d "$HOME/.oh-my-zsh" ]; then
    print_status "Installing Oh My Zsh..."
    # Download and install Oh My Zsh non-interactively
    RUNZSH=no CHSH=no sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
    print_success "Oh My Zsh installed successfully!"
else
    print_success "Oh My Zsh is already installed."
fi

# Create or backup existing .zshrc
if [ -f "$HOME/.zshrc" ]; then
    print_status "Backing up existing .zshrc to .zshrc.backup"
    cp "$HOME/.zshrc" "$HOME/.zshrc.backup"
fi

# Configure .zshrc with Oh My Zsh and mise integration
print_status "Configuring .zshrc..."

cat > "$HOME/.zshrc" << 'EOF'
# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="robbyrussell"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications.
# For more details, see 'man strftime' or search for strftime reference.
# HIST_STAMP="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# Initialize mise (if available)
# Check for mise in common installation locations
if [ -f "$HOME/.local/bin/mise" ]; then
    eval "$(~/.local/bin/mise activate zsh)"
elif command -v mise >/dev/null 2>&1; then
    eval "$(mise activate zsh)"
fi
EOF

print_success ".zshrc configured successfully!"

# Install some useful Oh My Zsh plugins
print_status "Installing useful Oh My Zsh plugins..."

# zsh-autosuggestions
if [ ! -d "$HOME/.oh-my-zsh/custom/plugins/zsh-autosuggestions" ]; then
    git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions
    print_success "zsh-autosuggestions plugin installed!"
fi

# zsh-syntax-highlighting
if [ ! -d "$HOME/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting" ]; then
    git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting
    print_success "zsh-syntax-highlighting plugin installed!"
fi

# Update plugins in .zshrc
print_status "Updating .zshrc with additional plugins..."
sed -i 's/plugins=(git)/plugins=(git zsh-autosuggestions zsh-syntax-highlighting)/g' "$HOME/.zshrc"

# Change default shell to zsh if not already
if [ "$SHELL" != "$(which zsh)" ]; then
    print_status "Changing default shell to zsh..."
    chsh -s $(which zsh)
    print_success "Default shell changed to zsh!"
    print_warning "You may need to log out and log back in for the shell change to take effect."
fi

# Create a sample mise configuration for when mise is installed
print_status "Creating example mise configuration (for when mise is installed)..."
if [ ! -f "$HOME/.mise.toml" ]; then
    cat > "$HOME/.mise.toml" << 'EOF'
# Global mise configuration
# You can specify global tool versions here
# This file is ready for when you install mise

[tools]
# Examples (uncomment and modify as needed):
# node = "lts"
# python = "3.11"
# ruby = "3.2"

[settings]
experimental = true
EOF
    print_success "Example .mise.toml created!"
fi

print_success "Oh My Zsh installation and mise configuration completed successfully!"
print_status "Summary of what was installed/configured:"
echo "  ✓ Zsh shell"
echo "  ✓ Oh My Zsh framework"
echo "  ✓ Mise support configured in .zshrc"
echo "  ✓ zsh-autosuggestions plugin"
echo "  ✓ zsh-syntax-highlighting plugin"
echo "  ✓ Created example .mise.toml configuration"
echo

print_status "Next steps:"
echo "1. Restart your terminal or run: exec zsh"
echo "2. Install mise if you haven't already:"
echo "   curl https://mise.run | sh"
echo "3. After installing mise, you can use commands like:"
echo "   mise install node@lts"
echo "   mise install python@3.11"
echo "   mise use node@lts python@3.11"
echo "4. Customize your .zshrc and .mise.toml as needed"
echo "5. Explore Oh My Zsh themes: https://github.com/ohmyzsh/ohmyzsh/wiki/Themes"
echo

print_warning "If this is your first time using zsh, you might want to restart your terminal session."
