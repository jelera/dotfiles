#!/bin/bash

# Caskaydia Code Nerd Font Installer
# This script downloads and installs the Caskaydia Code Nerd Font

set -e  # Exit on any error

# Color codes for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Font information
FONT_NAME="CascadiaCode"
FONT_URL="https://github.com/ryanoasis/nerd-fonts/releases/latest/download/${FONT_NAME}.zip"
TEMP_DIR="/tmp/caskaydia-install"

# Function to print colored output
print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Function to detect OS and set font directory
detect_os() {
    if [[ "$OSTYPE" == "darwin"* ]]; then
        FONT_DIR="$HOME/Library/Fonts"
        OS="macOS"
    elif [[ "$OSTYPE" == "linux-gnu"* ]]; then
        FONT_DIR="$HOME/.local/share/fonts"
        OS="Linux"
    else
        print_error "Unsupported operating system: $OSTYPE"
        exit 1
    fi
}

# Function to check if required tools are installed
check_dependencies() {
    print_status "Checking dependencies..."
    
    if ! command -v curl &> /dev/null && ! command -v wget &> /dev/null; then
        print_error "Neither curl nor wget is installed. Please install one of them."
        exit 1
    fi
    
    if ! command -v unzip &> /dev/null; then
        print_error "unzip is not installed. Please install unzip."
        exit 1
    fi
    
    print_success "All dependencies are available"
}

# Function to download the font
download_font() {
    print_status "Creating temporary directory..."
    rm -rf "$TEMP_DIR"
    mkdir -p "$TEMP_DIR"
    
    print_status "Downloading Caskaydia Code Nerd Font..."
    cd "$TEMP_DIR"
    
    if command -v curl &> /dev/null; then
        curl -L -o "${FONT_NAME}.zip" "$FONT_URL"
    elif command -v wget &> /dev/null; then
        wget -O "${FONT_NAME}.zip" "$FONT_URL"
    fi
    
    if [ ! -f "${FONT_NAME}.zip" ]; then
        print_error "Failed to download font"
        exit 1
    fi
    
    print_success "Font downloaded successfully"
}

# Function to extract and install the font
install_font() {
    print_status "Extracting font files..."
    unzip -q "${FONT_NAME}.zip"
    
    print_status "Creating font directory if it doesn't exist..."
    mkdir -p "$FONT_DIR"
    
    print_status "Installing font files to $FONT_DIR..."
    
    # Count font files for progress
    font_count=$(find . -name "*.ttf" -o -name "*.otf" | wc -l)
    installed_count=0
    
    # Install all TTF and OTF files
    for font_file in *.ttf *.otf; do
        if [ -f "$font_file" ]; then
            cp "$font_file" "$FONT_DIR/"
            installed_count=$((installed_count + 1))
            print_status "Installed: $font_file ($installed_count/$font_count)"
        fi
    done
    
    if [ $installed_count -eq 0 ]; then
        print_error "No font files found to install"
        exit 1
    fi
    
    print_success "Installed $installed_count font files"
}

# Function to refresh font cache
refresh_font_cache() {
    print_status "Refreshing font cache..."
    
    if [[ "$OS" == "Linux" ]]; then
        if command -v fc-cache &> /dev/null; then
            fc-cache -fv "$FONT_DIR" 2>/dev/null || true
            print_success "Font cache refreshed"
        else
            print_warning "fc-cache not found. Font cache not refreshed automatically."
            print_warning "You may need to restart applications to see the new font."
        fi
    elif [[ "$OS" == "macOS" ]]; then
        print_success "Font installed. macOS will automatically recognize the new font."
    fi
}

# Function to cleanup
cleanup() {
    print_status "Cleaning up temporary files..."
    rm -rf "$TEMP_DIR"
    print_success "Cleanup completed"
}

# Function to verify installation
verify_installation() {
    print_status "Verifying installation..."
    
    font_files_found=$(find "$FONT_DIR" -name "*CascadiaCode*" -o -name "*Caskaydia*" | wc -l)
    
    if [ $font_files_found -gt 0 ]; then
        print_success "Caskaydia Code Nerd Font installed successfully!"
        print_status "Found $font_files_found font files in $FONT_DIR"
        print_status "You can now use 'CaskaydiaCove Nerd Font' in your applications"
    else
        print_error "Font installation verification failed"
        exit 1
    fi
}

# Main execution
main() {
    echo "=================================="
    echo "Caskaydia Code Nerd Font Installer"
    echo "=================================="
    echo
    
    detect_os
    print_status "Detected OS: $OS"
    print_status "Font will be installed to: $FONT_DIR"
    echo
    
    check_dependencies
    download_font
    install_font
    refresh_font_cache
    cleanup
    verify_installation
    
    echo
    print_success "Installation completed successfully!"
    print_status "The font is now available as 'CaskaydiaCove Nerd Font' in your applications"
    
    if [[ "$OS" == "macOS" ]]; then
        print_status "You may need to restart applications to see the new font"
    fi
}

# Run the installer
main "$@"
